import React, { useMemo, useState } from "react";
import { useI18n } from "../i18n/I18nProvider"; const buyersSeed = [ { id:"B001", name:"FreshCo USA", need:"Papaya (MarJun)", terms:"Net 14", location:"Nogales, AZ" }, { id:"B002", name:"CitrusOne", need:"Oranges (Navel)", terms:"Net 21", location:"Fresno, CA" }, { id:"B003", name:"GreenLine", need:"Tomato Roma", terms:"COD", location:"Laredo, TX" },
]; const sellersSeed = [ { id:"S101", name:"Rancho Maya MX", offer:"Papaya 40k lb/week", certs:"GlobalG.A.P.", location:"Colima, MX" }, { id:"S102", name:"Sonora Citrus", offer:"Navel Oranges 2 loads/week", certs:"PRIMUSGFS", location:"Sonora, MX" }, { id:"S103", name:"Agri Norte", offer:"Tomato Roma 1 load/week", certs:"HACCP", location:"Sinaloa, MX" },
]; function Card({ title, lines, selected, onSelect }) { return ( <div onClick={onSelect} className="p-4 rounded-xl border hover:bg-gray-50 cursor-pointer"> <div className="font-semibold mb-1">{title}</div> <ul className="text-sm text-gray-600 space-y-0.5"> {lines.map((l,i)=><li key={i}>{l}</li>)} </ul> </div> );
} export default function AgMarketplace(){ const { t } = useI18n(); const [buyer, setBuyer] = useState(null); const [seller, setSeller] = useState(null); const compare = useMemo(()=>{ if (!buyer || !seller) return null; return { match: (() => { const b = buyer.need.toLowerCase(); const s = seller.offer.toLowerCase(); if (b.includes("papaya") && s.includes("papaya")) return "High"; if (b.includes("orange") && s.includes("orange")) return "High"; if (b.includes("tomato") && s.includes("tomato")) return "High"; return "Medium"; })(), notes: "Placeholder scoring. Replace with real matcher later." }; }, [buyer, seller]); return ( <div className="max-w-6xl mx-auto p-6 space-y-6"> <div className="flex items-center justify-between"> <h1 className="text-2xl font-bold">{t("marketplace")}</h1> </div> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> <div className="space-y-2"> <div className="text-sm font-semibold">{t("buyer")}</div> {buyersSeed.map(b => ( <Card key={b.id} onSelect={()=>setBuyer(b)} selected={buyer?.id===b.id} title={b.name} lines={[Need: , Terms: ]} /> ))} </div> <div className="space-y-2"> <div className="text-sm font-semibold">{t("seller")}</div> {sellersSeed.map(s => ( <Card key={s.id} onSelect={()=>setSeller(s)} selected={seller?.id===s.id} title={${s.name} } lines={[Offer: , Certs: ]} /> ))} </div> </div> <div className="bg-white rounded-2xl border border-gray-200 p-4"> <div className="text-sm font-semibold mb-2">{t("compare")}</div> {!compare && <div className="text-gray-500 text-sm">Select one buyer and one seller.</div>} {compare && ( <div className="grid grid-cols-1 md:grid-cols-3 gap-3"> <div className="p-3 rounded-lg bg-gray-50 border"> <div className="text-xs text-gray-500">Buyer</div> <div className="font-semibold">{buyer.name}</div> <div className="text-sm text-gray-600">{buyer.need}</div> </div> <div className="p-3 rounded-lg bg-gray-50 border"> <div className="text-xs text-gray-500">Seller</div> <div className="font-semibold">{seller.name}</div> <div className="text-sm text-gray-600">{seller.offer}</div> </div> <div className="p-3 rounded-lg bg-green-50 border border-green-300"> <div className="text-xs text-gray-500">Match Score</div> <div className="text-2xl font-bold">{compare.match}</div> <div className="text-xs text-gray-500 mt-1">{compare.notes}</div> </div> </div> )} </div> </div> );
} 
