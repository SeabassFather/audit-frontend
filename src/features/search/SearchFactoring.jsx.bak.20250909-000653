import React, { useMemo, useState } from "react";

const DATA = [
  { company:"Triumph Business Capital", industries:["Trucking","Logistics"], advance:90, feeMin:1.5, feeMax:3.0, monthlyMin:10000, monthlyMax:1000000 },
  { company:"altLINE", industries:["Manufacturing","Services"], advance:85, feeMin:1.0, feeMax:3.5, monthlyMin:5000, monthlyMax:500000 },
  { company:"Riviera Finance", industries:["Staffing","Manufacturing"], advance:92, feeMin:1.0, feeMax:2.5, monthlyMin:15000, monthlyMax:2000000 },
  { company:"BlueVine (legacy)", industries:["General"], advance:85, feeMin:1.0, feeMax:2.0, monthlyMin:5000, monthlyMax:250000 },
];

const SECTORS = ["Trucking","Logistics","Manufacturing","Services","Staffing","General"];

export default function SearchFactoring(){
  const [sector,setSector]=useState("");
  const [volume,setVolume]=useState(25000);   // monthly invoice volume
  const [advance,setAdvance]=useState(80);

  const results = useMemo(()=>{
    return DATA.filter(r=>{
      if (sector && !r.industries.includes(sector)) return false;
      if (advance && r.advance < advance) return false;
      if (volume && (r.monthlyMin > volume || r.monthlyMax < volume)) return false;
      return true;
    }).sort((a,b)=>b.advance-a.advance);
  },[sector,volume,advance]);

  return (
    <div className="rounded-2xl border border-emerald-300 bg-emerald-50 p-4">
      <div className="grid md:grid-cols-3 gap-3 mb-3">
        <div>
          <label className="text-sm text-slate-600">Sector</label>
          <select className="w-full rounded-lg border border-slate-300 bg-white px-3 py-2" value={sector} onChange={e=>setSector(e.target.value)}>
            <option value="">Any</option>
            {SECTORS.map(s=><option key={s} value={s}>{s}</option>)}
          </select>
        </div>
        <div>
          <label className="text-sm text-slate-600">Monthly Volume (USD)</label>
          <input type="number" className="w-full rounded-lg border border-slate-300 bg-white px-3 py-2" value={volume} onChange={e=>setVolume(+e.target.value||0)} />
        </div>
        <div>
          <label className="text-sm text-slate-600">Minimum Advance %</label>
          <input type="number" className="w-full rounded-lg border border-slate-300 bg-white px-3 py-2" value={advance} onChange={e=>setAdvance(+e.target.value||0)} />
        </div>
      </div>

      <div className="rounded-xl border border-slate-200 bg-white overflow-auto">
        <table className="min-w-full text-sm">
          <thead className="bg-slate-100 sticky top-0">
            <tr>
              <th className="text-left px-3 py-2">Company</th>
              <th className="text-left px-3 py-2">Industries</th>
              <th className="text-left px-3 py-2">Advance</th>
              <th className="text-left px-3 py-2">Fees (approx)</th>
              <th className="text-left px-3 py-2">Monthly Range</th>
            </tr>
          </thead>
          <tbody>
            {results.map((r,i)=>(
              <tr key={i} className="border-t">
                <td className="px-3 py-2">{r.company}</td>
                <td className="px-3 py-2">{r.industries.join(", ")}</td>
                <td className="px-3 py-2">{r.advance}%</td>
                <td className="px-3 py-2">{r.feeMin}%{r.feeMax}%</td>
                <td className="px-3 py-2">${r.monthlyMin.toLocaleString()}  ${r.monthlyMax.toLocaleString()}</td>
              </tr>
            ))}
            {!results.length && <tr><td className="px-3 py-3 text-slate-500" colSpan="5">No matches.</td></tr>}
          </tbody>
        </table>
      </div>
    </div>
  );
}