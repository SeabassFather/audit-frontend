import React, { useEffect, useMemo, useState } from 'react'
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts'

export default function App(){
  const [health, setHealth] = useState('checking...')
  const [series, setSeries] = useState([])

  useEffect(()=>{
    fetch('/api/health').then(r=>r.json()).then(d=>setHealth(d.status)).catch(()=>setHealth('down'))
    fetch('/api/usda/series?commodity=Papaya').then(r=>r.json()).then(setSeries).catch(()=>setSeries([]))
  },[])

  const hasData = series && series.length > 0

  return (
    <div className='min-h-screen p-6'>
      <nav className='flex items-center justify-between rounded-2xl p-4 bg-white shadow'>
        <div className='font-bold text-xl'>AuditDNA</div>
        <div className='text-sm'>
          API: <span className={'px-2 py-1 rounded ' + (health==='ok' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700')}>{health}</span>
        </div>
      </nav>

      <section className='mt-6 grid gap-6'>
        <div className='rounded-2xl bg-white p-5 shadow'>
          <h2 className='text-lg font-semibold mb-2'>USDA Pricing: W1W26 + 5-yr Avg (Mock)</h2>
          <p className='text-sm text-gray-600 mb-3'>Frontend  <code>/api/usda/series</code> via Vite proxy  Backend :5050</p>
          <div className='h-80'>
            {hasData ? (
              <ResponsiveContainer width='100%' height='100%'>
                <LineChart data={series}>
                  <CartesianGrid strokeDasharray='3 3' />
                  <XAxis dataKey='week' />
                  <YAxis />
                  <Tooltip />
                  <Legend />
                  <Line type='monotone' dataKey='price' name='This Year' dot={false} />
                  <Line type='monotone' dataKey='avg5' name='5-Year Avg' dot={false} strokeDasharray='5 5' />
                </LineChart>
              </ResponsiveContainer>
            ) : (
              <div className='text-sm text-gray-600'>No data yet.</div>
            )}
          </div>
        </div>

        <div className='rounded-2xl bg-white p-5 shadow'>
          <h3 className='font-semibold mb-2'>Next Steps</h3>
          <ul className='list-disc pl-5 text-sm'>
            <li>Swap mock endpoint for live AMS/MMN  NASS fallback using server-side fetch with <code>NASS_KEY</code>.</li>
            <li>Add commodity search under the chart  call <code>/api/usda/series?commodity=</code>.</li>
            <li>Persist choices, add compare (Papaya vs Orange), export CSV/PDF.</li>
          </ul>
        </div>
      </section>
    </div>
  )
}