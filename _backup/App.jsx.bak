# Go to the project cd "C:\AuditDNA\AUDIT_DNA_Frontend_Final\frontend"  # Safety backup of your current App.jsx if (!(Test-Path .\_backup)) { New-Item -ItemType Directory -Path .\_backup | Out-Null } if (Test-Path .\src\App.jsx) { Copy-Item .\src\App.jsx .\_backup\App.jsx.bak -Force }  # === IMPORTANT === # Copy the App.jsx from the canvas now (Ctrl+A, Ctrl+C) so it's on your clipboard. # Then run the rest:  # Write clipboard into src\App.jsx as UTF8 (NO BOM) and normalize newlines $clip = Get-Clipboard if (-not $clip) { throw "Clipboard is empty. Copy the App.jsx from the canvas first." }  # Strip BOM if present and turn literal `r`n sequences into real newlines $bytes = [System.Text.Encoding]::UTF8.GetBytes($clip) if ($bytes.Length -ge 3 -and $bytes[0] -eq 0xEF -and $bytes[1] -eq 0xBB -and $bytes[2] -eq 0xBF) {   $bytes = $bytes[3..($bytes.Length-1)] } $str = [System.Text.Encoding]::UTF8.GetString($bytes) $str = $str -replace '
', "`r`n"   # replace literal backtick-r backtick-n with actual CRLF [System.IO.File]::WriteAllText("$PWD\src\App.jsx", $str, (New-Object System.Text.UTF8Encoding($false)))  # Nuke BOM + stray 
 in ALL source files (belt-and-suspenders) Get-ChildItem .\src -Recurse -Include *.js,*.jsx,*.ts,*.tsx,*.css | ForEach-Object {   $p = $_.FullName   $b = Get-Content $p -Raw -Encoding Byte   if ($b.Length -ge 3 -and $b[0] -eq 0xEF -and $b[1] -eq 0xBB -and $b[2] -eq 0xBF) {     $b = $b[3..($b.Length-1)]   }   $t = [System.Text.Encoding]::UTF8.GetString($b)   $t = $t -replace '
', "`r`n"   [System.IO.File]::WriteAllText($p, $t, (New-Object System.Text.UTF8Encoding($false))) }  # Needed packages for the new App.jsx npm i react-router-dom lucide-react recharts  # Start CRA npm start 